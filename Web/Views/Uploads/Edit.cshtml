@using System.Collections
@using Core.Helper
@model Core.Models.EntityModels.Upload

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var drive = ViewBag.Drives as IEnumerable<SelectListItem>;
    var category = ViewBag.Category as IEnumerable<SelectListItem>;
    var subCategory = ViewBag.SubCategory as IEnumerable<SelectListItem>;
    var alert = (Alert)ViewBag.Alert;
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Upload</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UploadId)

        <div class="form-group">
            @Html.LabelFor(model => model.Drive, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Drive, drive, "Select One", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Drive, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryId, category, "Select One", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubCategoryId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SubCategoryId, subCategory, "Select One", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SubCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Thumbnail, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="thumbImage" id="thumbImage" class="form-control" />
                @Html.ValidationMessage("thumbImage", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Select Files</label>
            <div class="col-md-10">
                <input class="form-control" type="file" name="SelectedFiles" id="SelectedFiles" multiple />
                @Html.ValidationMessage("SelectedFiles", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div class="panel panel-default">
    <div class="panel-heading">
        <span class="fa fa-folder"></span> @Model.Title
        <a href="#" class="pull-right">Download All [.zip]</a>
    </div>
    <div class="panel-body">
        <ul class="list-group">
            @foreach (var file in Model.FileInfos)
            {
                <li class="list-group-item">
                    <span class="fa fa-file-movie-o"></span> @file.FileName
                    <span></span>
                </li>
            }
        </ul>
    </div>
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
